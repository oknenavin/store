name: cxon benchmark

on: [ push, pull_request, workflow_dispatch ]

jobs:
  gnuplot:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout workflows-data
      uses: actions/checkout@v2
    - name: gnuplot setup
      run: |
        sudo apt-get update
        sudo apt-get install gnuplot
    - name: Plot
      run: |
        cd cxon/benchmarks
        gnuplot -e "INPUT='g++.head.default.json.node'" -e "OUTPUT='figures/g++.head.default.json.node'" -e "TITLE='read/node (default)'" src/benchmark-head-json-read.gp
        gnuplot -e "INPUT='g++.head.default.json.native'" -e "OUTPUT='figures/g++.head.default.json.native'" -e "TITLE='read/native (default)'" src/benchmark-head-json-read.gp
        gnuplot -e "INPUT='g++.head.fast_float.json.node'" -e "OUTPUT='figures/g++.head.fast_float.json.node'" -e "TITLE='read/node (fast_float)'" src/benchmark-head-json-read.gp
        gnuplot -e "INPUT='g++.head.fast_float.json.native'" -e "OUTPUT='figures/g++.head.fast_float.json.native'" -e "TITLE='read/native (fast_float)'" src/benchmark-head-json-read.gp
        gnuplot -e "INPUT='g++.head.default.json.node'" -e "OUTPUT='figures/g++.head.default.json.node'" -e "TITLE='write/node (default)'" src/benchmark-head-json-write.gp
        gnuplot -e "INPUT='g++.head.default.json.native'" -e "OUTPUT='figures/g++.head.default.json.native'" -e "TITLE='write/native (default)'" src/benchmark-head-json-write.gp
        gnuplot -e "INPUT='g++.head.fast_float.json.node'" -e "OUTPUT='figures/g++.head.fast_float.json.node'" -e "TITLE='write/node (fast_float)'" src/benchmark-head-json-write.gp
        gnuplot -e "INPUT='g++.head.fast_float.json.native'" -e "OUTPUT='figures/g++.head.fast_float.json.native'" -e "TITLE='write/native (fast_float)'" src/benchmark-head-json-write.gp
        gnuplot -e "INPUT='clang++.head.default.json.node'" -e "OUTPUT='figures/clang++.head.default.json.node'" -e "TITLE='read/node (default)'" src/benchmark-head-json-read.gp
        gnuplot -e "INPUT='clang++.head.default.json.native'" -e "OUTPUT='figures/clang++.head.default.json.native'" -e "TITLE='read/native (default)'" src/benchmark-head-json-read.gp
        gnuplot -e "INPUT='clang++.head.fast_float.json.node'" -e "OUTPUT='figures/clang++.head.fast_float.json.node'" -e "TITLE='read/node (fast_float)'" src/benchmark-head-json-read.gp
        gnuplot -e "INPUT='clang++.head.fast_float.json.native'" -e "OUTPUT='figures/clang++.head.fast_float.json.native'" -e "TITLE='read/native (fast_float)'" src/benchmark-head-json-read.gp
        gnuplot -e "INPUT='clang++.head.default.json.node'" -e "OUTPUT='figures/clang++.head.default.json.node'" -e "TITLE='write/node (default)'" src/benchmark-head-json-write.gp
        gnuplot -e "INPUT='clang++.head.default.json.native'" -e "OUTPUT='figures/clang++.head.default.json.native'" -e "TITLE='write/native (default)'" src/benchmark-head-json-write.gp
        gnuplot -e "INPUT='clang++.head.fast_float.json.node'" -e "OUTPUT='figures/clang++.head.fast_float.json.node'" -e "TITLE='write/node (fast_float)'" src/benchmark-head-json-write.gp
        gnuplot -e "INPUT='clang++.head.fast_float.json.native'" -e "OUTPUT='figures/clang++.head.fast_float.json.native'" -e "TITLE='write/native (fast_float)'" src/benchmark-head-json-write.gp
    - name: Commit
      run: |
        cd cxon/benchmarks
        if [[ `git status --porcelain` ]]; then
          git config user.name "oknenavin" && git config user.email ${{ secrets.CXON_MAIL }}
          git add .
          git commit -am "$(date -u --iso-8601=seconds)"
          git push
        fi
